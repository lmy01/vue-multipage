{"remainingRequest":"/Users/lmy/Desktop/lmy-学习记录/vue-multipage/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lmy/Desktop/lmy-学习记录/vue-multipage/src/views/console/components/core/Drawer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lmy/Desktop/lmy-学习记录/vue-multipage/src/views/console/components/core/Drawer.vue","mtime":1559095180000},{"path":"/Users/lmy/Desktop/lmy-学习记录/vue-multipage/node_modules/babel-loader/lib/index.js","mtime":1559007266000},{"path":"/Users/lmy/Desktop/lmy-学习记录/vue-multipage/node_modules/cache-loader/dist/cjs.js","mtime":1559007304000},{"path":"/Users/lmy/Desktop/lmy-学习记录/vue-multipage/node_modules/vue-loader/lib/index.js","mtime":1559007306000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// Utilities\nimport {\n  mapMutations,\n  mapState\n} from 'vuex'\n\nexport default {\n  data: () => ({\n    logo: 'https://demos.creative-tim.com/vuetify-material-dashboard/img/vuetifylogo.png',\n    links: [\n      {\n        to: '/console/dashboard',\n        icon: 'mdi-view-dashboard',\n        text: 'Dashboard'\n      },\n      {\n        to: '/console/user-profile',\n        icon: 'mdi-account',\n        text: 'User Profile'\n      },\n      {\n        to: '/console/table-list',\n        icon: 'mdi-clipboard-outline',\n        text: 'Table List'\n      },\n      {\n        to: '/console/typography',\n        icon: 'mdi-format-font',\n        text: 'Typography'\n      },\n      {\n        to: '/console/icons',\n        icon: 'mdi-chart-bubble',\n        text: 'Icons'\n      },\n      {\n        to: '/console/maps',\n        icon: 'mdi-map-marker',\n        text: 'Maps'\n      },\n      {\n        to: '/console/notifications',\n        icon: 'mdi-bell',\n        text: 'Notifications'\n      }\n    ],\n    responsive: false\n  }),\n  computed: {\n    ...mapState('app', ['image', 'color']),\n    inputValue: {\n      get () {\n        return this.$store.state.app.drawer\n      },\n      set (val) {\n        this.setDrawer(val)\n      }\n    },\n    items () {\n      return this.$t('Layout.View.items')\n    },\n    sidebarOverlayGradiant () {\n      return `${this.$store.state.app.sidebarBackgroundColor}, ${this.$store.state.app.sidebarBackgroundColor}`\n    }\n  },\n  mounted () {\n    this.onResponsiveInverted()\n    window.addEventListener('resize', this.onResponsiveInverted)\n  },\n  beforeDestroy () {\n    window.removeEventListener('resize', this.onResponsiveInverted)\n  },\n  methods: {\n    ...mapMutations('app', ['setDrawer', 'toggleDrawer']),\n    onResponsiveInverted () {\n      if (window.innerWidth < 991) {\n        this.responsive = true\n      } else {\n        this.responsive = false\n      }\n    }\n  }\n}\n",null]}